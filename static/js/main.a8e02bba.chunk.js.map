{"version":3,"sources":["APIManager.ts","YouTubeVideo.tsx","BinarySearch.ts","Music.tsx","App.tsx","index.tsx"],"names":["APIManager","data","music","YoutubeVideo","props","width","height","onReady","onStateChange","onCurrentTimeChange","useState","player","setPlayer","useEffect","interval","setInterval","getCurrentTime","clearInterval","loadVideo","window","YT","Player","events","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","id","BinarySearch","items","item","this","findFloorIndexHelper","length","lo","hi","mid","Math","floor","useStyles","makeStyles","theme","active","marginTop","spacing","marginBottom","inactive","color","logo","marginRight","Music","classes","setMusic","currentVideoIndex","setCurrentVideoIndex","currentVideoTimeIndex","setCurrentVideoTimeIndex","currentVideoTime","setCurrentVideoTime","times","setTimes","ref","useRef","getAllMusic","index","findFloorIndex","current","scrollIntoView","behavior","block","Container","maxWidth","style","display","alignItems","className","alt","Typography","variant","Link","href","target","Grid","container","xs","event","loadPlaylist","map","m","setLoop","getPlaylistIndex","overflowY","paddingTop","paddingBottom","lyrics","line","justify","undefined","align","textAlign","IconButton","size","onClick","slice","toFixed","Button","text","dummy","body","appendChild","value","select","execCommand","removeChild","copyToClipboard","JSON","stringify","App","createMuiTheme","palette","type","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.a8e02bba.chunk.js","sourcesContent":["import data from \"./data.json\";\n\nexport interface MusicJSON {\n  id: string;\n  lyrics: string[];\n  times: number[];\n}\n\nclass APIManager {\n\n  static getAllMusic(): MusicJSON[] {\n    return data.music;\n  }\n}\n\nexport default APIManager;\n","import React, { useEffect, useState } from 'react';\n\ntype YoutubeVideoProps = {\n  width: string,\n  height: string,\n  onReady: (event: any) => void,\n  onStateChange: (event: any) => void,\n  onCurrentTimeChange: (player: any) => void\n}\n\nconst YoutubeVideo = (props: YoutubeVideoProps) => {\n\n  const { width, height, onReady, onStateChange, onCurrentTimeChange } = props;\n\n  const [player, setPlayer] = useState(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => { if (player && player.getCurrentTime) onCurrentTimeChange(player) }, 100); \n    return () => clearInterval(interval);\n  }, [player, onCurrentTimeChange]);\n\n  useEffect(() => {\n\n    const loadVideo = () => {\n  \n      // the Player object is created uniquely based on the id in props\n      // @ts-ignore\n      setPlayer(new window.YT.Player(\"player\", {\n        width: width,\n        height: height,\n        events: {\n          onReady: onReady,\n          onStateChange: onStateChange\n        }\n      }));\n\n    };\n\n    // On mount, check to see if the API script is already loaded\n    // @ts-ignore\n    if (!window.YT) { // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      // @ts-ignore\n      window.onYouTubeIframeAPIReady = loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    } else { // If script is already there, load the video directly\n      loadVideo();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id=\"player\" />\n  );\n\n};\n\nexport default YoutubeVideo;","class BinarySearch {\n\n  /**\n   * Find the largest number smaller than target\n   * @param items - items to search from\n   * @param item - item to search the floor of\n   * @return index of item found. -1 if not found.\n   */\n  static findFloorIndex(items: number[], item: number): number {\n    return this.findFloorIndexHelper(items, item, 0, items.length - 1);\n  }\n\n  private static findFloorIndexHelper(items: number[], item: number, lo: number, hi: number): number {\n    \n    if (lo >= hi) return lo;\n\n    if (lo + 1 === hi) {\n      if (items[hi] <= item) return hi;\n      else return lo;\n    }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n\n    if (items[mid] === item) return mid;\n\n    if (items[mid] < item) {\n      return this.findFloorIndexHelper(items, item, mid, hi);\n    }\n    else {\n      return this.findFloorIndexHelper(items, item, lo, mid - 1);\n    }\n\n  }\n\n}\n\nexport default BinarySearch;","import React, { useState, useEffect, useRef, } from \"react\";\nimport { Typography, Container, Grid, makeStyles, Theme, Button, IconButton, Link } from \"@material-ui/core\";\nimport APIManager from \"./APIManager\";\nimport YoutubeVideo from \"./YouTubeVideo\";\nimport BinarySearch from \"./BinarySearch\";\nimport TimerIcon from '@material-ui/icons/Timer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\n  active: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n\n  inactive: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    color: \"#9e9e9e\"\n  },\n\n  logo: {\n    width: 48,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction copyToClipboard(text) {\n  var dummy = document.createElement(\"textarea\");\n  // to avoid breaking orgain page when copying more words\n  // cant copy when adding below this code\n  // dummy.style.display = 'none'\n  document.body.appendChild(dummy);\n  //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". â€“ Eduard\n  dummy.value = text;\n  dummy.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(dummy);\n}\n\nconst Music = () => {\n\n  const classes = useStyles();\n  const [music, setMusic] = useState(null);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const [currentVideoTimeIndex, setCurrentVideoTimeIndex] = useState(0);\n  const [currentVideoTime, setCurrentVideoTime] = useState(0);\n\n  const [times, setTimes] = useState(null);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    setMusic(APIManager.getAllMusic());\n  }, []);\n\n  useEffect(() => {\n    if (!music) return;\n\n    setTimes(music[currentVideoIndex].times);\n  }, [music, currentVideoIndex]);\n \n  useEffect(() => {\n\n    if (!music) return;\n\n    const index = BinarySearch.findFloorIndex(music[currentVideoIndex].times, currentVideoTime)\n    \n    if (index !== currentVideoTimeIndex) {\n      setCurrentVideoTimeIndex(index);\n    }\n\n  }, [currentVideoTime, music, currentVideoIndex, currentVideoTimeIndex]);\n\n  useEffect(() => {\n\n    if (!music) return;\n\n    if (ref && ref.current) ref.current.scrollIntoView({\n      behavior: \"smooth\", \n      block: \"center\"\n    });\n\n  }, [currentVideoTimeIndex, music]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <img className={classes.logo} alt=\"Jmusic\" src=\"https://github.com/ioneone/Jmusic/blob/develop/logo.png?raw=true\" />\n        <Typography display=\"inline\" variant=\"h6\">\n          JMusic\n        </Typography>\n      </div>\n      <Typography variant=\"subtitle2\">\n        About: Music Loop Player\n      </Typography>\n      <Typography variant=\"body2\">\n        Motivation comes from <Link href=\"https://support.google.com/youtube/thread/12880369?hl=en\" target=\"_blank\">here</Link>\n      </Typography>\n      <Typography variant=\"body2\">\n        <Link href=\"https://listenonrepeat.com/ \" target=\"_blank\">ListenOnRepeat</Link> was nice but the ads were killing my CPU\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          {\n            music &&\n            <YoutubeVideo\n              width=\"100%\"\n              height=\"420px\"\n              onReady={(event) => {\n                const player = event.target;\n                player.loadPlaylist(music.map(m => m.id));\n                player.setLoop(true);\n              }}\n              onStateChange={(event) => {\n                const player = event.target;\n                setCurrentVideoIndex(player.getPlaylistIndex());\n              }}\n              onCurrentTimeChange={(player) => {\n                setCurrentVideoTime(player.getCurrentTime());\n              }}\n            />\n          }\n        </Grid>\n        <Grid item xs={5} style={{ height: 420, overflowY: \"auto\", paddingTop: 210, paddingBottom: 210 }}>\n          {\n            music && times && music[currentVideoIndex].lyrics.map((line, index) => \n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs={9}>\n                  <Typography \n                    ref={index === currentVideoTimeIndex ? ref : undefined}\n                    className={index === currentVideoTimeIndex ? classes.active : classes.inactive } \n                    align=\"center\"\n                    variant=\"body1\"\n                  >\n                    {line}\n                  </Typography> \n                </Grid>\n                <Grid item xs={1} style={{ textAlign: \"right\" }}>\n                  <IconButton \n                    size=\"small\"\n                    onClick={() => {\n                      setTimes([...times.slice(0, index), currentVideoTime, ...times.slice(index + 1)]);\n                    }}\n                  >\n                    <TimerIcon />\n                  </IconButton>\n                </Grid>\n                <Grid item xs={2}>\n                  <Typography \n                    align=\"center\"\n                    variant=\"body1\"\n                  >\n                    {times[index] ? times[index].toFixed(2) : \"...\"}\n                  </Typography> \n                </Grid>\n              </Grid>\n            )\n          }\n        </Grid>\n      </Grid>\n      <Typography>\n        Current Video Time: {currentVideoTime}\n      </Typography>\n      <br/>\n      <Button\n        onClick={() => {\n          copyToClipboard(JSON.stringify(times));\n        }}\n      >\n        Copy lyrics times to Clipboard\n      </Button>\n    </Container>\n  );\n}\n\nexport default Music;","import React from \"react\";\nimport Music from \"./Music\";\nimport { Container } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <Container>\n      <Music />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}